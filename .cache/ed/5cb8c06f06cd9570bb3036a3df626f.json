{"id":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","dependencies":[{"name":"C:\\Users\\Username\\Desktop\\OpenLayerProject\\package.json","includedInParent":true,"mtime":1584950946965},{"name":"C:\\Users\\Username\\Desktop\\OpenLayerProject\\node_modules\\core-js-pure\\package.json","includedInParent":true,"mtime":1584950945913},{"name":"../internals/an-object","loc":{"line":1,"column":23},"parent":"C:\\Users\\Username\\Desktop\\OpenLayerProject\\node_modules\\core-js-pure\\internals\\call-with-safe-iteration-closing.js","resolved":"C:\\Users\\Username\\Desktop\\OpenLayerProject\\node_modules\\core-js-pure\\internals\\an-object.js"}],"generated":{"js":"var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}}],"sources":{"node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js":"var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n"},"lineCount":14}},"error":null,"hash":"af20769fa9dbc9893c36b87cca632799","cacheData":{"env":{}}}